<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stroke Detection Interface</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f7fa;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            width: 100%;
            max-width: 1200px;
            background-color: #ffffff;
            border-radius: 20px;
            padding: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        .medical-history-card, .personal-history-card {
            background-color: #f1f3f5;
            border-radius: 20px;
            padding: 20px;
            width: 250px;
            text-align: left;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .medical-history-card h3, .personal-history-card h3 {
            margin-bottom: 10px;
            font-size: 1.2em;
            color: #555;
        }

        .medical-history-card label, .personal-history-card label {
            font-size: 14px;
            color: #555;
        }

        .medical-history-card input, .personal-history-card input, select {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .camera-section {
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            background-color: #eef1f7;
            border-radius: 20px;
            width: 400px;
            height: 500px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .camera-section video {
            border-radius: 20px;
            width: 100%;
            height: 100%;
        }

        .camera-section .scan-border {
            position: absolute;
            border: 4px solid #007bff;
            width: 300px;
            height: 300px;
            border-radius: 10px;
            top: 20px; /* Adjust this based on how much you want the scan border moved up */
        }

        .bottom-actions {
            display: flex;
            justify-content: center;
            gap: 30px; /* Space between buttons */
            margin-top: 20px;
        }

        /* Separate styles for the camera button */
        .camera-button {
            background-color: #007bff;
            border: none;
            color: white;
            font-size: 1.5em;
            padding: 15px;
            border-radius: 50%;
            width: 60px;  /* Adjust size for the camera button */
            height: 60px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .camera-button:hover {
            background-color: #0056b3;
        }

        /* Separate styles for the upload button */
        .upload-button {
            background-color: #007bff;
            border: none;
            color: white;
            font-size: 1.5em;
            padding: 10px;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .upload-button:hover {
            background-color: #0056b3;
        }

        .hidden-input {
            display: none;
        }

        /* Stroke Prediction Box Positioned Below Camera Section */
        .stroke-prediction {
            margin-top: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            padding: 15px;
            width: 80%;
            text-align: center;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        }

        .stroke-prediction p {
            margin: 0;
            font-size: 1.2em;
            color: #007bff;
        }

    </style>
</head>
<body>
    <div class="container">
        <!-- Medical History Input Left -->
        <div class="medical-history-card">
            <h3>Medical History</h3>
            <label for="age">Age:</label>
            <input type="number" id="age" name="age" placeholder="Enter Age" required>

            <label for="hypertension">Hypertension:</label>
            <select id="hypertension" name="hypertension" required>
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>

            <label for="heart_disease">Heart Disease:</label>
            <select id="heart_disease" name="heart_disease" required>
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>

            <label for="heart_rate">Heart Rate:</label>
            <input type="number" id="heart_rate" name="heart_rate" placeholder="Enter Heart Rate (bpm)" required>

            <label for="bmi">BMI:</label>
            <input type="number" id="bmi" name="bmi" placeholder="kg/mÂ²" step="0.1" required>
        </div>

        <!-- Camera Section in the Middle -->
        <div class="camera-section" id="camera-section">
            <video id="camera-stream" autoplay></video>
            <div class="scan-border"></div>

            <!-- Action Buttons Positioned Below -->
            <div class="bottom-actions">
                <!-- Capture Image Button -->
                <button class="camera-button" id="capture-btn">&#128247;</button> <!-- Camera Icon -->
                <!-- Upload Image Button -->
                <label for="imagefile" class="upload-button">
                    <input class="hidden-input" type="file" id="imagefile" name="imagefile" accept="image/*">
                    <span>&#128228;</span> <!-- Upload Icon -->
                </label>
            </div>

            <!-- Stroke Prediction Result Inside Camera Section -->
            <div class="stroke-prediction">
                <p id="prediction-result">No prediction yet</p>
            </div>
        </div>

        <!-- Personal History Input Right -->
        <div class="personal-history-card">
            <h3>Personal History</h3>
            <label for="ever_married">Ever Married:</label>
            <select id="ever_married" name="ever_married" required>
                <option value="Yes">Yes</option>
                <option value="No">No</option>
            </select>

            <label for="work_type">Work Type:</label>
            <select id="work_type" name="work_type" required>
                <option value="Private">Private</option>
                <option value="Self-employed">Self-employed</option>
                <option value="Government Job">Government Job</option>
                <option value="Children">Children</option>
                <option value="Never Worked">Never Worked</option>
            </select>

            <label for="residence_type">Residence Type:</label>
            <select id="residence_type" name="residence_type" required>
                <option value="Urban">Urban</option>
                <option value="Rural">Rural</option>
            </select>

            <label for="smoking_status">Smoking Status:</label>
            <select id="smoking_status" name="smoking_status" required>
                <option value="never smoked">Never Smoked</option>
                <option value="formerly smoked">Formerly Smoked</option>
                <option value="smokes">Smokes</option>
            </select>

            <label for="avg_glucose_level">Avg Glucose Level:</label>
            <input type="number" id="avg_glucose_level" name="avg_glucose_level" placeholder="mg/dL" step="0.01" required>
        </div>
    </div>

    <script>
        const video = document.getElementById('camera-stream');
        const captureBtn = document.getElementById('capture-btn');
        const imagefile = document.getElementById('imagefile');
        const predictionResult = document.getElementById('prediction-result');

        let mediaStream = null;

        // Access the user's camera
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            navigator.mediaDevices.getUserMedia({ video: true }).then(function(stream) {
                mediaStream = stream;
                video.srcObject = stream;
            });
        }

    // Capture photo from camera
    captureBtn.addEventListener('click', function() {
        const canvas = document.createElement('canvas');
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        canvas.getContext('2d').drawImage(video, 0, 0);

        // Convert the canvas to a Blob and send it to the server
        canvas.toBlob(function(blob) {
            sendPrediction(blob);
        });
    });

    // Handle image file upload
    imagefile.addEventListener('change', function() {
        const file = imagefile.files[0];
        if (file) {
            sendPrediction(file);
        }
    });

    // Function to send the prediction request
    function sendPrediction(imageBlob) {
        const formData = new FormData();

        // Append medical history data
        formData.append('age', document.getElementById('age').value);
        formData.append('hypertension', document.getElementById('hypertension').value);
        formData.append('heart_disease', document.getElementById('heart_disease').value);
        formData.append('bmi', document.getElementById('bmi').value);
        formData.append('heart_rate', document.getElementById('heart_rate').value);
        formData.append('ever_married', document.getElementById('ever_married').value);
        formData.append('work_type', document.getElementById('work_type').value);
        formData.append('residence_type', document.getElementById('residence_type').value);
        formData.append('smoking_status', document.getElementById('smoking_status').value);
        formData.append('avg_glucose_level', document.getElementById('avg_glucose_level').value);

        // Append the image data
        formData.append('imagefile', imageBlob);

        // Send the form data to the server
        fetch('/predict', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.stroke_probability) {
                predictionResult.textContent = `Stroke Probability: ${data.stroke_probability}%`;
            } else {
                predictionResult.textContent = 'Prediction failed. Try again.';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            predictionResult.textContent = 'Error during prediction. Try again.';
        });
    }
    </script>
</body>
</html>
